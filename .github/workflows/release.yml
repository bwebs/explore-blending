name: Release Docker Image

on:
  release:
    types: [created]

env:
  PROJECT_ID: ${{ secrets.GCP_PROJECT_ID }}
  REGION: us-central1
  REPOSITORY: explore-blend-api
  APP_NAME: explore-blending
  BUCKET_NAME: ${{ secrets.GCP_BUCKET_NAME }}
  TAG: ${{ github.event.release.tag_name }}

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    permissions:
      contents: "read"
      id-token: "write"

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Authenticate to Google Cloud
        uses: google-github-actions/auth@v2
        with:
          workload_identity_provider: ${{ secrets.GCP_WORKLOAD_IDENTITY_PROVIDER }}
          service_account: ${{ secrets.GCP_SERVICE_ACCOUNT }}

      - name: Set up Cloud SDK
        uses: google-github-actions/setup-gcloud@v2

      - name: Build and push Docker image
        run: |
          # Build and push the image with both the release tag and latest
          gcloud builds submit explore_blend_api \
            --tag $REGION-docker.pkg.dev/$PROJECT_ID/$REPOSITORY/explore-blend-api:${{ env.TAG }} \
            --tag $REGION-docker.pkg.dev/$PROJECT_ID/$REPOSITORY/explore-blend-api:latest

  build-and-upload-frontend:
    runs-on: ubuntu-latest
    permissions:
      contents: "read"
      id-token: "write"

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Install and use Node.js via nvm
        run: |
          curl -o- https://raw.githubusercontent.com/nvm-sh/nvm/v0.39.7/install.sh | bash
          export NVM_DIR="$HOME/.nvm"
          [ -s "$NVM_DIR/nvm.sh" ] && \. "$NVM_DIR/nvm.sh" # This loads nvm
          nvm install # Installs version from .nvmrc
          nvm use     # Uses the installed version
          npm install --global yarn

      - name: Install dependencies
        run: yarn install

      - name: Build frontend
        run: yarn build

      # Need auth and gcloud setup before uploading
      - name: Authenticate to Google Cloud
        uses: google-github-actions/auth@v2
        with:
          workload_identity_provider: ${{ secrets.GCP_WORKLOAD_IDENTITY_PROVIDER }}
          service_account: ${{ secrets.GCP_SERVICE_ACCOUNT }}

      - name: Upload frontend bundle to GCS
        uses: google-github-actions/upload-cloud-storage@v2
        with:
          path: dist
          destination: ${{ env.BUCKET_NAME }}/apps/${{ env.APP_NAME }}/${{ env.TAG }}
          parent: false
